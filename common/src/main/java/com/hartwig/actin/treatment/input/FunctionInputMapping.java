package com.hartwig.actin.treatment.input;

import java.util.Map;

import com.google.common.collect.Maps;
import com.hartwig.actin.treatment.datamodel.EligibilityRule;
import com.hartwig.actin.treatment.input.single.FunctionInput;

final class FunctionInputMapping {

    static final Map<EligibilityRule, FunctionInput> RULE_INPUT_MAP = Maps.newHashMap();

    static {
        RULE_INPUT_MAP.put(EligibilityRule.IS_AT_LEAST_X_YEARS_OLD, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.IS_MALE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.IS_FEMALE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_WHO_STATUS_OF_AT_MOST_X, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_WHO_STATUS_OF_AT_EXACTLY_X, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KARNOFSKY_SCORE_OF_AT_LEAST_X, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LANSKY_SCORE_OF_AT_LEAST_X, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.CAN_GIVE_ADEQUATE_INFORMED_CONSENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LIFE_EXPECTANCY_OF_AT_LEAST_X_WEEKS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LIFE_EXPECTANCY_OF_AT_LEAST_X_MONTHS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.IS_TREATED_IN_HOSPITAL_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.WILL_PARTICIPATE_IN_TRIAL_IN_COUNTRY_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.IS_LEGALLY_INSTITUTIONALIZED, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.IS_INVOLVED_IN_STUDY_PROCEDURES, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_SOLID_PRIMARY_TUMOR, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_SOLID_PRIMARY_TUMOR_INCLUDING_LYMPHOMA, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PRIMARY_TUMOR_LOCATION_BELONGING_TO_DOID_TERM_X, FunctionInput.ONE_DOID_TERM);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PRIMARY_TUMOR_LOCATION_BELONGING_TO_DOID_TERM_X_DISTAL_SUB_LOCATION,
                FunctionInput.ONE_DOID_TERM);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CANCER_OF_UNKNOWN_PRIMARY_AND_TYPE_X, FunctionInput.ONE_TUMOR_TYPE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CANCER_WITH_NEUROENDOCRINE_COMPONENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CANCER_WITH_SMALL_CELL_COMPONENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_BREAST_CANCER_HORMONE_POSITIVE_AND_HER2_NEGATIVE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PROSTATE_CANCER_WITH_SMALL_CELL_COMPONENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_OVARIAN_CANCER_WITH_MUCINOUS_COMPONENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_OVARIAN_BORDERLINE_TUMOR, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_STOMACH_UNDIFFERENTIATED_TUMOR, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_SECONDARY_GLIOBLASTOMA, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CYTOLOGICAL_DOCUMENTATION_OF_TUMOR_TYPE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTOLOGICAL_DOCUMENTATION_OF_TUMOR_TYPE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_STAGE_X, FunctionInput.ONE_TUMOR_STAGE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LOCALLY_ADVANCED_CANCER, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_METASTATIC_CANCER, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_UNRESECTABLE_CANCER, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_UNRESECTABLE_STAGE_III_CANCER, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECURRENT_CANCER, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_INCURABLE_CANCER, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_ANY_LESION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LIVER_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.MEETS_SPECIFIC_CRITERIA_REGARDING_LIVER_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_CNS_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_ACTIVE_CNS_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_BRAIN_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_ACTIVE_BRAIN_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_EXTRACRANIAL_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_BONE_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_BONE_METASTASES_ONLY, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LUNG_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LYMPH_NODE_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_VISCERAL_METASTASES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_BIOPSY_AMENABLE_LESION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PRESENCE_OF_LESIONS_IN_AT_LEAST_X_SITES, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.CAN_PROVIDE_FRESH_TISSUE_SAMPLE_FOR_FURTHER_ANALYSIS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.CAN_PROVIDE_ARCHIVAL_OR_FRESH_TISSUE_SAMPLE_FOR_FURTHER_ANALYSIS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.MEETS_SPECIFIC_REQUIREMENTS_REGARDING_BIOPSY, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_EVALUABLE_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_MEASURABLE_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_MEASURABLE_DISEASE_RECIST, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PROGRESSIVE_DISEASE_ACCORDING_TO_SPECIFIC_CRITERIA, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_INJECTION_AMENABLE_LESION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_MRI_VOLUME_MEASUREMENT_AMENABLE_LESION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_EVIDENCE_OF_CNS_HEMORRHAGE_BY_MRI, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_INTRATUMORAL_HEMORRHAGE_BY_MRI, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_SUPERSCAN_BONE_SCAN, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_BCLC_STAGE_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LOW_RISK_OF_HEMORRHAGE_UPON_TREATMENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LEFT_SIDED_COLORECTAL_TUMOR, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.IS_NOT_ELIGIBLE_FOR_TREATMENT_WITH_CURATIVE_INTENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.IS_ELIGIBLE_FOR_ON_LABEL_TREATMENT_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.IS_ELIGIBLE_FOR_PALLIATIVE_RADIOTHERAPY, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.IS_ELIGIBLE_FOR_LOCO_REGIONAL_THERAPY, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.IS_ELIGIBLE_FOR_TREATMENT_LINES_X, FunctionInput.MANY_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_EXHAUSTED_SOC_TREATMENTS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_AT_LEAST_X_APPROVED_TREATMENT_LINES, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_AT_LEAST_X_SYSTEMIC_TREATMENT_LINES, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_AT_MOST_X_SYSTEMIC_TREATMENT_LINES, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_ANY_CANCER_TREATMENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_TREATMENT_NAME_X, FunctionInput.ONE_SPECIFIC_TREATMENT);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_TREATMENT_NAME_X_WITHIN_Y_WEEKS, FunctionInput.ONE_SPECIFIC_TREATMENT_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_TREATMENT_WITH_ANY_DRUG_X, FunctionInput.MANY_DRUGS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_COMBINED_TREATMENT_NAMES_X_WITHIN_Y_WEEKS, FunctionInput.MANY_STRINGS_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_COMBINED_TREATMENT_NAMES_X_AND_BETWEEN_Y_AND_Z_CYCLES,
                FunctionInput.MANY_SPECIFIC_TREATMENTS_TWO_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT, FunctionInput.ONE_TREATMENT_CATEGORY_OR_TYPE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT_OF_TYPES_Y, FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_FIRST_LINE_CATEGORY_X_TREATMENT_OF_TYPES_Y,
                FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT_OF_TYPES_Y_WITHIN_Z_WEEKS,
                FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT_IGNORING_TYPES_Y, FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT_IGNORING_DRUGS_Y, FunctionInput.ONE_TREATMENT_CATEGORY_MANY_DRUGS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT_AND_AT_LEAST_Y_LINES,
                FunctionInput.ONE_TREATMENT_CATEGORY_OR_TYPE_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT_AND_AT_MOST_Y_LINES,
                FunctionInput.ONE_TREATMENT_CATEGORY_OR_TYPE_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT_OF_TYPES_Y_AND_AT_LEAST_Z_LINES,
                FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_CATEGORY_X_TREATMENT_OF_TYPES_Y_AND_AT_MOST_Z_LINES,
                FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_ADJUVANT_CATEGORY_X_TREATMENT, FunctionInput.ONE_TREATMENT_CATEGORY_OR_TYPE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_NON_INTERNAL_RADIOTHERAPY, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_HER2_TARGETING_ADC, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PROGRESSIVE_DISEASE_FOLLOWING_NAME_X_TREATMENT, FunctionInput.ONE_SPECIFIC_TREATMENT);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PROGRESSIVE_DISEASE_FOLLOWING_CATEGORY_X_TREATMENT,
                FunctionInput.ONE_TREATMENT_CATEGORY_OR_TYPE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PROGRESSIVE_DISEASE_FOLLOWING_CATEGORY_X_TREATMENT_OF_TYPES_Y,
                FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PROGRESSIVE_DISEASE_FOLLOWING_CATEGORY_X_TREATMENT_OF_TYPES_Y_AND_AT_LEAST_Z_WEEKS,
                FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PROGRESSIVE_DISEASE_FOLLOWING_CATEGORY_X_TREATMENT_OF_TYPES_Y_AND_AT_LEAST_Z_CYCLES,
                FunctionInput.ONE_TREATMENT_CATEGORY_MANY_TYPES_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PROGRESSIVE_DISEASE_FOLLOWING_AT_LEAST_X_TREATMENT_LINES, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RADIOLOGICAL_PROGRESSIVE_DISEASE_FOLLOWING_AT_LEAST_X_TREATMENT_LINES,
                FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RADIOLOGICAL_PROGRESSIVE_DISEASE_AFTER_LATEST_TREATMENT_LINE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_COMPLETE_RESECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_PARTIAL_RESECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_RESECTION_WITHIN_X_WEEKS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_LOCAL_HEPATIC_THERAPY_WITHIN_X_WEEKS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_INTRATUMORAL_INJECTION_TREATMENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CUMULATIVE_ANTHRACYCLINE_EXPOSURE_OF_AT_MOST_X_MG_PER_M2_DOXORUBICIN_OR_EQUIVALENT,
                FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PREVIOUSLY_PARTICIPATED_IN_CURRENT_TRIAL, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PREVIOUSLY_PARTICIPATED_IN_TRIAL, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.IS_NOT_PARTICIPATING_IN_ANOTHER_TRIAL, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_ACTIVE_SECOND_MALIGNANCY, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_SECOND_MALIGNANCY, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_SECOND_MALIGNANCY_BELONGING_TO_DOID_TERM_X, FunctionInput.ONE_DOID_TERM);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_SECOND_MALIGNANCY_WITHIN_X_YEARS, FunctionInput.ONE_INTEGER);

        RULE_INPUT_MAP.put(EligibilityRule.DRIVER_EVENT_IN_ANY_GENES_X_WITH_APPROVED_THERAPY_AVAILABLE, FunctionInput.MANY_GENES);
        RULE_INPUT_MAP.put(EligibilityRule.ACTIVATION_OR_AMPLIFICATION_OF_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.INACTIVATION_OF_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.ACTIVATING_MUTATION_IN_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.MUTATION_IN_GENE_X_OF_ANY_PROTEIN_IMPACTS_Y, FunctionInput.ONE_GENE_MANY_PROTEIN_IMPACTS);
        RULE_INPUT_MAP.put(EligibilityRule.MUTATION_IN_GENE_X_IN_ANY_CODONS_Y, FunctionInput.ONE_GENE_MANY_CODONS);
        RULE_INPUT_MAP.put(EligibilityRule.MUTATION_IN_GENE_X_IN_EXON_Y, FunctionInput.ONE_GENE_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.MUTATION_IN_GENE_X_IN_EXON_Y_TO_EXON_Z, FunctionInput.ONE_GENE_TWO_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.MUTATION_IN_GENE_X_IN_EXON_Y_OF_TYPE_Z, FunctionInput.ONE_GENE_ONE_INTEGER_ONE_VARIANT_TYPE);
        RULE_INPUT_MAP.put(EligibilityRule.UTR_3_LOSS_IN_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.AMPLIFICATION_OF_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.AMPLIFICATION_OF_GENE_X_OF_AT_LEAST_Y_COPIES, FunctionInput.ONE_GENE_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.FUSION_IN_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.WILDTYPE_OF_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.EXON_SKIPPING_GENE_X_EXON_Y, FunctionInput.ONE_GENE_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.MSI_SIGNATURE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HRD_SIGNATURE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.TMB_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.TML_OF_AT_LEAST_X, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.TML_BETWEEN_X_AND_Y, FunctionInput.TWO_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HLA_TYPE_X, FunctionInput.ONE_HLA_ALLELE);
        RULE_INPUT_MAP.put(EligibilityRule.OVEREXPRESSION_OF_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.NON_EXPRESSION_OF_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.EXPRESSION_OF_PROTEIN_X_BY_IHC, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.EXPRESSION_OF_PROTEIN_X_BY_IHC_OF_EXACTLY_Y, FunctionInput.ONE_STRING_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.EXPRESSION_OF_PROTEIN_X_BY_IHC_OF_AT_LEAST_Y, FunctionInput.ONE_STRING_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.EXPRESSION_OF_PROTEIN_X_BY_IHC_OF_AT_MOST_Y, FunctionInput.ONE_STRING_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.PROTEIN_X_IS_WILD_TYPE_BY_IHC, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.PD_L1_SCORE_CPS_OF_AT_LEAST_X, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.PD_L1_SCORE_CPS_OF_AT_MOST_X, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.PD_L1_SCORE_TPS_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.PD_L1_STATUS_MUST_BE_AVAILABLE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PSMA_POSITIVE_PET_SCAN, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.MOLECULAR_RESULTS_MUST_BE_AVAILABLE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.MOLECULAR_TEST_MUST_HAVE_BEEN_DONE_FOR_GENE_X, FunctionInput.ONE_GENE);
        RULE_INPUT_MAP.put(EligibilityRule.MOLECULAR_TEST_MUST_HAVE_BEEN_DONE_FOR_PROMOTER_OF_GENE_X, FunctionInput.ONE_GENE);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_LEUKOCYTES_ABS_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LEUKOCYTES_ABS_LLN_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LYMPHOCYTES_ABS_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LYMPHOCYTES_CELLS_PER_MM3_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_NEUTROPHILS_ABS_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_THROMBOCYTES_ABS_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HEMOGLOBIN_G_PER_DL_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HEMOGLOBIN_MMOL_PER_L_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_INR_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PT_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PT_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_APTT_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_APTT_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PTT_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_ALBUMIN_G_PER_DL_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_ALBUMIN_LLN_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_ASAT_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_ALAT_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_ALP_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_ALP_ULN_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TOTAL_BILIRUBIN_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TOTAL_BILIRUBIN_UMOL_PER_L_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_DIRECT_BILIRUBIN_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_DIRECT_BILIRUBIN_PERCENTAGE_OF_TOTAL_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CREATININE_MG_PER_DL_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CREATININE_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_EGFR_CKD_EPI_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_EGFR_MDRD_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CREATININE_CLEARANCE_CG_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CREATININE_CLEARANCE_BETWEEN_X_AND_Y, FunctionInput.TWO_DOUBLES);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_MEASURED_CREATININE_CLEARANCE_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_BNP_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TROPONIN_IT_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TRIGLYCERIDE_MMOL_PER_L_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_AMYLASE_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LIPASE_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CALCIUM_MG_PER_DL_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_IONIZED_CALCIUM_MMOL_PER_L_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CORRECTED_CALCIUM_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CALCIUM_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CORRECTED_CALCIUM_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_MAGNESIUM_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CORRECTED_MAGNESIUM_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PHOSPHORUS_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CORRECTED_PHOSPHORUS_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTASSIUM_MMOL_PER_L_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTASSIUM_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CORRECTED_POTASSIUM_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_HYPOKALEMIA, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_HYPOMAGNESEMIA, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_HYPOCALCEMIA, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_SERUM_TESTOSTERONE_NG_PER_DL_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LDH_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PSA_UG_PER_L_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PSA_LLN_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PHOSPHORUS_ULN_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PHOSPHORUS_MMOL_PER_L_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_AFP_ULN_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CA125_ULN_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HCG_ULN_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TOTAL_PROTEIN_IN_URINE_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TOTAL_PROTEIN_IN_24H_URINE_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_URINE_PROTEIN_TO_CREATININE_RATIO_MG_PER_MG_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_GLUCOSE_PL_MMOL_PER_L_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_THYROXINE_WITHIN_INSTITUTIONAL_NORMAL_LIMITS, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_SPECIFIC_CONDITION_WITH_DOID_TERM_X, FunctionInput.ONE_DOID_TERM);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_SPECIFIC_CONDITION_X_BY_NAME, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_AUTOIMMUNE_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_CARDIAC_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_CARDIOVASCULAR_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_CONGESTIVE_HEART_FAILURE_WITH_AT_LEAST_NYHA_CLASS_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_CENTRAL_NERVOUS_SYSTEM_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_EYE_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_GASTROINTESTINAL_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_IMMUNE_SYSTEM_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_INTERSTITIAL_LUNG_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_LIVER_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_LUNG_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_MYOCARDIAL_INFARCT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_MYOCARDIAL_INFARCT_WITHIN_X_MONTHS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_PNEUMONITIS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_STROKE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_THROMBOEMBOLIC_EVENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_ARTERIAL_THROMBOEMBOLIC_EVENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_VENOUS_THROMBOEMBOLIC_EVENT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_VASCULAR_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_SEVERE_CONCOMITANT_CONDITION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_ORGAN_TRANSPLANT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_ORGAN_TRANSPLANT_WITHIN_X_YEARS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_GILBERT_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HYPERTENSION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HYPOTENSION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_DIABETES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_ABSORPTION_DIFFICULTIES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_ORAL_MEDICATION_DIFFICULTIES, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_CONTRAINDICATION_TO_CT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_CONTRAINDICATION_TO_MRI, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_CONTRAINDICATION_TO_PET_MRI, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_MRI_SCAN_DOCUMENTING_STABLE_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.IS_IN_DIALYSIS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CHILD_PUGH_CLASS_X_LIVER_SCORE, FunctionInput.ONE_STRING);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_SIGNIFICANT_HEART_DISEASE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_CARDIAC_ARRHYTHMIA, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LVEF_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_QTC_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_QTCF_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_QTCF_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_JTC_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LONG_QT_SYNDROME, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_NORMAL_CARDIAC_FUNCTION_BY_MUGA_OR_TTE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_FAMILY_HISTORY_OF_IDIOPATHIC_SUDDEN_DEATH, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_FAMILY_HISTORY_OF_LONG_QT_SYNDROME, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_ACTIVE_INFECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_EBV_INFECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_HEPATITIS_A_INFECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_HEPATITIS_B_INFECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_HEPATITIS_C_INFECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_HIV_INFECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_CYTOMEGALOVIRUS_INFECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_KNOWN_TUBERCULOSIS_INFECTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.MEETS_COVID_19_INFECTION_REQUIREMENTS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_LIVE_VACCINE_WITHIN_X_MONTHS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.ADHERENCE_TO_PROTOCOL_REGARDING_ATTENUATED_VACCINE_USE, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_NAME_X_MEDICATION, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_CATEGORY_X_MEDICATION, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_CATEGORY_X_MEDICATION_WITHIN_Y_WEEKS, FunctionInput.ONE_STRING_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_POTENTIALLY_QT_PROLONGATING_MEDICATION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_INDUCING_ANY_CYP, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_INHIBITING_CYP_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_INDUCING_CYP_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_MEDICATION_INDUCING_CYP_X_WITHIN_Y_WEEKS, FunctionInput.ONE_STRING_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_INHIBITING_OR_INDUCING_ANY_CYP, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_INHIBITING_OR_INDUCING_CYP_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_SUBSTRATE_OF_CYP_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_INHIBITING_OR_INDUCING_PGP, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_SUBSTRATE_OF_PGP, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_INHIBITING_OR_INDUCING_BCRP, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.CURRENTLY_GETS_MEDICATION_SUBSTRATE_OF_BCRP, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_STABLE_ANTICOAGULANT_MEDICATION_DOSING, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_DRUGS_X_CANCER_THERAPY_WITHIN_Y_WEEKS, FunctionInput.MANY_STRINGS_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_DRUGS_X_CANCER_THERAPY_WITHIN_Y_WEEKS_Z_HALF_LIVES,
                FunctionInput.MANY_STRINGS_TWO_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_CATEGORIES_X_CANCER_THERAPY_WITHIN_Y_WEEKS, FunctionInput.MANY_STRINGS_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_CATEGORIES_X_CANCER_THERAPY_WITHIN_Y_WEEKS_Z_HALF_LIVES,
                FunctionInput.MANY_STRINGS_TWO_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_TRIAL_MEDICATION_WITHIN_X_WEEKS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_TRIAL_MEDICATION_WITHIN_X_WEEKS_Y_HALF_LIVES, FunctionInput.TWO_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_RADIOTHERAPY_WITHIN_X_WEEKS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_ANY_ANTI_CANCER_THERAPY_WITHIN_X_WEEKS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_ANY_ANTI_CANCER_THERAPY_EXCL_CATEGORIES_X_WITHIN_Y_WEEKS,
                FunctionInput.MANY_STRINGS_ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_ANY_ANTI_CANCER_THERAPY_WITHIN_X_WEEKS_Y_HALF_LIVES, FunctionInput.TWO_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RECEIVED_ANY_ANTI_CANCER_THERAPY_EXCL_CATEGORIES_X_WITHIN_Y_WEEKS_Z_HALF_LIVES,
                FunctionInput.MANY_STRINGS_TWO_INTEGERS);
        RULE_INPUT_MAP.put(EligibilityRule.WILL_REQUIRE_ANY_ANTICANCER_THERAPY_DURING_TRIAL, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.IS_BREASTFEEDING, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.IS_PREGNANT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.USES_ADEQUATE_ANTICONCEPTION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.ADHERES_TO_SPERM_OR_EGG_DONATION_PRESCRIPTIONS, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_ANY_COMPLICATION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_COMPLICATION_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_COMPLICATION_OF_CATEGORY_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_POTENTIAL_UNCONTROLLED_TUMOR_RELATED_PAIN, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_LEPTOMENINGEAL_DISEASE, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_INTOLERANCE_TO_NAME_X, FunctionInput.ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_INTOLERANCE_BELONGING_TO_DOID_TERM_X, FunctionInput.ONE_DOID_TERM);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_INTOLERANCE_TO_TAXANE, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_INTOLERANCE_RELATED_TO_STUDY_MEDICATION, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_INTOLERANCE_FOR_PD_1_OR_PD_L1_INHIBITORS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HISTORY_OF_ANAPHYLAXIS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_EXPERIENCED_IMMUNE_RELATED_ADVERSE_EVENTS, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TOXICITY_OF_AT_LEAST_GRADE_X, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TOXICITY_OF_AT_LEAST_GRADE_X_IN_Y, FunctionInput.ONE_INTEGER_ONE_STRING);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_TOXICITY_OF_AT_LEAST_GRADE_X_IGNORING_Y, FunctionInput.ONE_INTEGER_MANY_STRINGS);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_SBP_MMHG_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_SBP_MMHG_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_DBP_MMHG_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_DBP_MMHG_OF_AT_MOST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PULSE_OXIMETRY_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_BODY_WEIGHT_OF_AT_LEAST_X, FunctionInput.ONE_DOUBLE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_RESTING_HEART_RATE_BETWEEN_X_AND_Y, FunctionInput.TWO_DOUBLES);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_BMI_OF_AT_MOST_X, FunctionInput.ONE_INTEGER);

        RULE_INPUT_MAP.put(EligibilityRule.REQUIRES_REGULAR_HEMATOPOIETIC_SUPPORT, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_ERYTHROCYTE_TRANSFUSION_WITHIN_LAST_X_WEEKS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_THROMBOCYTE_TRANSFUSION_WITHIN_LAST_X_WEEKS, FunctionInput.ONE_INTEGER);

        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_RECENT_SURGERY, FunctionInput.NONE);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_SURGERY_WITHIN_LAST_X_WEEKS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_HAD_SURGERY_WITHIN_LAST_X_MONTHS, FunctionInput.ONE_INTEGER);
        RULE_INPUT_MAP.put(EligibilityRule.HAS_PLANNED_SURGERY, FunctionInput.NONE);

        RULE_INPUT_MAP.put(EligibilityRule.IS_ABLE_AND_WILLING_TO_NOT_USE_CONTACT_LENSES, FunctionInput.NONE);
    }

    private FunctionInputMapping() {
    }
}
